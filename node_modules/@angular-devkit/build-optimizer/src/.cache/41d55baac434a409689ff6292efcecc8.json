{"remainingRequest":"/home/ramprit/Public/NgxApp/primeng/Blog/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/ramprit/Public/NgxApp/primeng/Blog/node_modules/primeng/components/messages/messages.js","dependencies":[{"path":"/home/ramprit/Public/NgxApp/primeng/Blog/node_modules/primeng/components/messages/messages.js","mtime":1532594293000},{"path":"/home/ramprit/Public/NgxApp/primeng/Blog/node_modules/cache-loader/dist/cjs.js","mtime":1533135336120},{"path":"/home/ramprit/Public/NgxApp/primeng/Blog/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nvar __param = /*@__PURE__*/ require(\"tslib\").__param;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar animations_1 = require(\"@angular/animations\");\nvar messageservice_1 = require(\"../common/messageservice\");\nvar Messages = /** @class */ /*@__PURE__*/ (function () {\n    function Messages(messageService) {\n        this.messageService = messageService;\n        this.closable = true;\n        this.enableService = true;\n        this.valueChange = new core_1.EventEmitter();\n    }\n    Messages.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.messageService && this.enableService) {\n            this.messageSubscription = this.messageService.messageObserver.subscribe(function (messages) {\n                if (messages) {\n                    if (messages instanceof Array) {\n                        var filteredMessages = messages.filter(function (m) { return _this.key === m.key; });\n                        _this.value = _this.value ? _this.value.concat(filteredMessages) : filteredMessages.slice();\n                    }\n                    else if (_this.key === messages.key) {\n                        _this.value = _this.value ? _this.value.concat([messages]) : [messages];\n                    }\n                }\n            });\n            this.clearSubscription = this.messageService.clearObserver.subscribe(function (key) {\n                if (key) {\n                    if (_this.key === key) {\n                        _this.value = null;\n                    }\n                }\n                else {\n                    _this.value = null;\n                }\n            });\n        }\n    };\n    Messages.prototype.hasMessages = function () {\n        return this.value && this.value.length > 0;\n    };\n    Messages.prototype.getSeverityClass = function () {\n        return this.value[0].severity;\n    };\n    Messages.prototype.clear = function (event) {\n        this.value = [];\n        this.valueChange.emit(this.value);\n        event.preventDefault();\n    };\n    Object.defineProperty(Messages.prototype, \"icon\", {\n        get: function () {\n            var icon = null;\n            if (this.hasMessages()) {\n                var msg = this.value[0];\n                switch (msg.severity) {\n                    case 'success':\n                        icon = 'pi-check';\n                        break;\n                    case 'info':\n                        icon = 'pi-info-circle';\n                        break;\n                    case 'error':\n                        icon = 'pi-times';\n                        break;\n                    case 'warn':\n                        icon = 'pi-exclamation-triangle';\n                        break;\n                    default:\n                        icon = 'pi-info-circle';\n                        break;\n                }\n            }\n            return icon;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Messages.prototype.ngOnDestroy = function () {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], Messages.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Messages.prototype, \"closable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Messages.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Messages.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Messages.prototype, \"enableService\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Messages.prototype, \"key\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Messages.prototype, \"valueChange\", void 0);\n    Messages = __decorate([\n        core_1.Component({\n            selector: 'p-messages',\n            template: \"\\n        <div *ngIf=\\\"hasMessages()\\\" class=\\\"ui-messages ui-widget ui-corner-all\\\" style=\\\"display:block\\\"\\n                    [ngClass]=\\\"{'ui-messages-info':(value[0].severity === 'info'),\\n                    'ui-messages-warn':(value[0].severity === 'warn'),\\n                    'ui-messages-error':(value[0].severity === 'error'),\\n                    'ui-messages-success':(value[0].severity === 'success')}\\\"\\n                    [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" [@messageAnimation]=\\\"'visible'\\\">\\n            <a href=\\\"#\\\" class=\\\"ui-messages-close\\\" (click)=\\\"clear($event)\\\" *ngIf=\\\"closable\\\">\\n                <i class=\\\"pi pi-times\\\"></i>\\n            </a>\\n            <span class=\\\"ui-messages-icon pi\\\" [ngClass]=\\\"icon\\\"></span>\\n            <ul>\\n                <li *ngFor=\\\"let msg of value\\\">\\n                    <span *ngIf=\\\"msg.summary\\\" class=\\\"ui-messages-summary\\\" [innerHTML]=\\\"msg.summary\\\"></span>\\n                    <span *ngIf=\\\"msg.detail\\\" class=\\\"ui-messages-detail\\\" [innerHTML]=\\\"msg.detail\\\"></span>\\n                </li>\\n            </ul>\\n        </div>\\n    \",\n            animations: [\n                animations_1.trigger('messageAnimation', [\n                    animations_1.state('visible', animations_1.style({\n                        transform: 'translateY(0)',\n                        opacity: 1\n                    })),\n                    animations_1.transition('void => *', [\n                        animations_1.style({ transform: 'translateY(-25%)', opacity: 0 }),\n                        animations_1.animate('300ms ease-out')\n                    ]),\n                    animations_1.transition('* => void', [\n                        animations_1.animate(('250ms ease-in'), animations_1.style({\n                            opacity: 0,\n                            transform: 'translateY(-25%)'\n                        }))\n                    ])\n                ])\n            ]\n        }),\n        __param(0, core_1.Optional())\n    ], Messages);\n    return Messages;\n}());\nexports.Messages = Messages;\nvar MessagesModule = /** @class */ /*@__PURE__*/ (function () {\n    function MessagesModule() {\n    }\n    MessagesModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [Messages],\n            declarations: [Messages]\n        })\n    ], MessagesModule);\n    return MessagesModule;\n}());\nexports.MessagesModule = MessagesModule;\n",null]}